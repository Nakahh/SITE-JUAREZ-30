#!/usr/bin/env tsx

import { execSync } from 'child_process'
import { existsSync, readFileSync, writeFileSync } from 'fs'
import { join } from 'path'

console.log('üöÄ Iniciando setup autom√°tico completo...')

try {
  // 1. Limpar cache do npm
  console.log('üßπ Limpando cache...')
  execSync('npm cache clean --force', { stdio: 'inherit' })

  // 2. Instalar depend√™ncias
  console.log('üì¶ Instalando depend√™ncias...')
  execSync('npm install --legacy-peer-deps', { stdio: 'inherit' })

  // 3. Instalar depend√™ncias de desenvolvimento
  console.log('üîß Instalando depend√™ncias de desenvolvimento...')
  try {
    execSync('npm install --save-dev @types/node @types/react @types/react-dom typescript tsx', { stdio: 'inherit' })
    console.log('‚úÖ Depend√™ncias de desenvolvimento instaladas')
  } catch (error) {
    console.error('‚ö†Ô∏è Aviso: Algumas depend√™ncias de dev podem j√° estar instaladas')
  }

  // 4. Gerar Prisma
  console.log('üóÑÔ∏è Gerando Prisma Client...')
  execSync('npx prisma generate', { stdio: 'inherit' })

  // 5. Sincronizar banco
  console.log('üîÑ Sincronizando banco de dados...')
  execSync('npx prisma db push', { stdio: 'inherit' })

  // 6. Popular banco
  console.log('üå± Populando banco de dados...')
  execSync('npx tsx scripts/seed.ts', { stdio: 'inherit' })

  // 7. Verificar arquivos cr√≠ticos
  console.log('üîç Verificando arquivos cr√≠ticos...')
  const criticalFiles = [
    'components/footer.tsx',
    'components/navbar.tsx',
    'app/globals.css',
    'lib/auth.ts',
    'prisma/schema.prisma'
  ]

  let allFilesExist = true
  criticalFiles.forEach(file => {
    if (existsSync(file)) {
      console.log(`‚úÖ ${file} - OK`)
    } else {
      console.log(`‚ùå ${file} - FALTANDO`)
      allFilesExist = false
    }
  })

  // 8. Verificar logos
  console.log('üé® Verificando logos...')
  const logos = [
    'public/siqueira campos para fundo claro.png',
    'public/siqueira campos para fundo escuro.png',
    'public/logo-kryonix.png'
  ]

  logos.forEach(logo => {
    if (existsSync(logo)) {
      console.log(`‚úÖ ${logo} - OK`)
    } else {
      console.log(`‚ö†Ô∏è ${logo} - FALTANDO`)
    }
  })

  console.log('‚úÖ Setup autom√°tico conclu√≠do com sucesso!')

  if (allFilesExist) {
    console.log('‚úÖ Todos os arquivos cr√≠ticos est√£o presentes')
    console.log('üöÄ Execute "npm run dev" para iniciar o servidor')
  } else {
    console.log('‚ö†Ô∏è Alguns arquivos cr√≠ticos est√£o faltando')
  }

} catch (error) {
  console.error('‚ùå Erro durante o setup:', error)
  process.exit(1)
}