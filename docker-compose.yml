version: "3.9"

services:
  frontend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: siqueira-frontend
    restart: unless-stopped
    environment:
      # Variáveis de ambiente para o aplicativo Next.js
      DATABASE_URL: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DATABASE}?schema=public
      NEXTAUTH_SECRET: ${NEXTAUTH_SECRET}
      NEXTAUTH_URL: ${NEXT_PUBLIC_BASE_URL}
      MINIO_ENDPOINT: ${MINIO_ENDPOINT}
      MINIO_ACCESS_KEY: ${MINIO_ACCESS_KEY}
      MINIO_SECRET_KEY: ${MINIO_SECRET_KEY}
      MINIO_BUCKET_NAME: ${MINIO_BUCKET_NAME}
      RESEND_API_KEY: ${RESEND_API_KEY}
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      EVOLUTION_API_URL: ${EVOLUTION_API_URL}
      EVOLUTION_API_KEY: ${EVOLUTION_API_KEY}
      NEXT_PUBLIC_BASE_URL: ${NEXT_PUBLIC_BASE_URL}
      NEXT_PUBLIC_WHATSAPP_NUMBER: ${NEXT_PUBLIC_WHATSAPP_NUMBER}
      NEXT_PUBLIC_DEVELOPER_INSTAGRAM: ${NEXT_PUBLIC_DEVELOPER_INSTAGRAM}
      NEXT_PUBLIC_DEVELOPER_WHATSAPP: ${NEXT_PUBLIC_DEVELOPER_WHATSAPP}
      NEXT_PUBLIC_GOOGLE_MAPS_API_KEY: ${NEXT_PUBLIC_GOOGLE_MAPS_API_KEY}
      SECRET_KEY: ${SECRET_KEY} # Adicionada a variável SECRET_KEY
    volumes:
      - next-cache:/app/.next/cache
    depends_on:
      - postgres
    networks:
      - juareznet
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.frontend.rule=Host(`${TRAEFIK_DOMAIN}`)"
      - "traefik.http.routers.frontend.entrypoints=websecure"
      - "traefik.http.routers.frontend.tls.certresolver=myresolver"
      - "traefik.http.services.frontend.loadbalancer.server.port=3000"

  postgres:
    image: postgres:14-alpine
    container_name: siqueira-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${POSTGRES_DATABASE}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      TZ: America/Sao_Paulo
    command: ["postgres", "-c", "max_connections=500", "-c", "shared_buffers=512MB"]
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - juareznet
    ports:
      - "5432:5432" # Expondo a porta para acesso local (ex: para migrações)

  traefik:
    image: traefik:latest
    container_name: traefik
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./traefik/traefik.yml:/traefik.yml:ro
      - ./traefik/acme.json:/acme.json
    networks:
      - juareznet
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.api.rule=Host(`traefik.${TRAEFIK_DOMAIN}`)"
      - "traefik.http.routers.api.entrypoints=websecure"
      - "traefik.http.routers.api.tls.certresolver=myresolver"
      - "traefik.http.routers.api.service=api@internal"
      - "traefik.http.routers.api.middlewares=auth"
      - "traefik.http.middlewares.auth.basicauth.users=admin:$$apr1$$H6usA.0Q$$f00000000000000000000" # Senha "admin" para o dashboard do Traefik
      - "traefik.http.services.api.loadbalancer.server.port=8080"
      - "traefik.http.routers.dashboard.rule=Host(`traefik.${TRAEFIK_DOMAIN}`)"
      - "traefik.http.routers.dashboard.entrypoints=websecure"
      - "traefik.http.routers.dashboard.tls.certresolver=myresolver"
      - "traefik.http.routers.dashboard.service=api@internal"
      - "traefik.http.routers.dashboard.middlewares=auth"

volumes:
  postgres-data:
  next-cache:

networks:
  juareznet:
    driver: bridge
